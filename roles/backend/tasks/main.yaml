- name: Disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install nodejs and mysql
  ansible.builtin.dnf: # only works for redhat family
    name: "{{item}}"
    state: installed
  loop:
  - nodejs
  - mysql

- name: Create Expense user
  ansible.builtin.user:
    name: expense

- name: Run app-pre-req
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req  # .yaml is not required
    # Here we are running app-pre-req file from common roles 
    
- name: Install npm dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app  #Change the working directory to /app  and run the command 

- name: Copy file from Ansible server to remote server
  ansible.builtin.template:  # ansibel searches for the specified filewith variables(Ansibel serachse for variable value in vars folder) in templates folder
    src: backend.service.j2 
    dest: /etc/systemd/system/backend.service

- name: Install python Mysql dependencies
  ansible.builtin.pip:
    name:
    - PyMySQL  # To connect to mysql db from ansible
    - cryptography
    executable: pip3.9

# To load schema
# mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql

- name: Import data into mysql
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}" # conncetion is established with mysql server
    target: /app/schema/backend.sql  # target from where we need to load the data
    state: import  
    name: all             # to import all the data

- name: daemon-reload to pick up config changes
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Start and enable backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes

